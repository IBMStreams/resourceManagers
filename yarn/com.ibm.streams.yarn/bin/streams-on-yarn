#!/usr/bin/python

#
# *******************************************************************************
# * Copyright (C)2014, International Business Machines Corporation and *
# * others. All Rights Reserved. *
# *******************************************************************************
# 
from os.path import dirname, realpath, expanduser, sep
from os import system, getenv
import sys

class Command(object):

	def __init__(self, name, str__, n_args):
		self._name = name
		self._str__ = str__
		self._n_args = n_args
		
	def check(self, args):
		if len(args) in self._n_args:
			return True
		return False

COMMANDS = {
	'start': Command('start', "Launch Streams within YARN: \t streams-yarn start [optional:<path_to_streams_binary>]", [0, 1]),
	'stop': Command('stop', "Stop Streams within YARN: \t streams-yarn stop", [0]),
	'lsinstance': Command('lsinstance', "List Streams instances: \t streams-yarn lsinstance", [0]),
	'startinstance': Command('startinstance', "Start a Streams instance: \t streams-yarn startinstance  <instance_id>", [1]),
	'stopinstance': Command('stopinstance', "Stop a Streams instance: \t streams-yarn stopinstance <instance_id>", [1]),
	'addhost': Command('addhost', "Add a new host into a Streams instance: \t streams-yarn addhost <instance_id> <hostname>", [2]),
	'rmhost': Command('removehost', "Remove a host from a Streams instance: \t streams-yarn rmhost <instance_id> <hostname>", [2]),
}

def print_help():
	print 'Usage:'
	for command in COMMANDS:
		print COMMANDS[command]._str__
	
def test_var(var, msg):
	if(var == None):
		sys.exit(msg)

instance_owner = getenv("USER")
streams_install_dir = getenv("STREAMS_INSTALL")
streams_im_dir = getenv("STREAMS_IM")

test_var(streams_install_dir, "ERROR: STREAMS_INSTALL environment variable not set")
test_var(streams_im_dir, "ERROR: STREAMS_IM environment variable not set")

thrift_ver = "0.9.0"
instance_owner_home_dir = expanduser("~")
mvn_repo = instance_owner_home_dir + sep + ".m2" + sep + "repository"
apache_mvn_repo = mvn_repo + sep + "org" + sep + "apache"
thrift_jar = (apache_mvn_repo + sep + "thrift" + sep + "libthrift" + sep 
			+ thrift_ver + sep + "libthrift-" + thrift_ver + ".jar")
streams_yarn_jar = 'streams-on-yarn-1.0.0.jar'
base_command = 'java -cp'
streams_runtime_jar = 'streams.runtime.jar'
streams_im_jar = 'streams.instancemanager.jar'
streams_yarn_client_class = 'com.ibm.streams.yarn.StreamsClient'
yarn_cp = "$(yarn classpath)"

path = (dirname(realpath(__file__)) + '/../target/' + streams_yarn_jar + ':' 
+ streams_install_dir + '/lib/' + streams_runtime_jar + ':'
+ streams_im_dir + '/lib/' + streams_im_jar)
argv = sys.argv[1:]
if len(argv) == 0 or argv[0] not in COMMANDS or not COMMANDS[argv[0]].check(argv[1:]):
	print_help()
else:
	command = (base_command + ' :' + path + ':' + yarn_cp + ':' + thrift_jar
			+ ' ' + streams_yarn_client_class + ' ' + ' '.join(argv))
	if(argv[0] == "startinstance"):
		command += (" " + instance_owner + " " + streams_install_dir + " " 
				+ streams_im_dir + " " + instance_owner_home_dir)
	#print command
	rc = system(command)
	if(rc != 0):
		sys.exit("Failed")
